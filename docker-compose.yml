version: "3.6"

services:

  viking_db:
    image: postgres:11
    container_name: viking_db
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - viking-network
    volumes:
      - ${DB_PATH}:/var/lib/postgresql/data
    restart: unless-stopped

  viking_nginx:
    image: nginx:latest
    container_name: viking_nginx
    volumes:
      - ${NGINX_CONFIG}:/etc/nginx/conf.d
    ports:
      - 80:80
    depends_on:
      - viking_backend
      - viking_frontend
    networks:
      - viking-network
    restart: unless-stopped

  viking_frontend:
    image: viking_frontend:latest
    container_name: viking_frontend
    volumes:
      - ${FRONTEND}:/app
      - /app/node_modules
    networks:
      - viking-network
    restart: unless-stopped

  viking_backend:
    image: viking_backend:latest
    container_name: viking_backend
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - viking-network
    environment:
      - PYTHONUNBUFFERED=1
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_USER=${DB_USER}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
    volumes:
      - ${BACKEND}:/app
    ports:
      - 8000:8000
    depends_on:
      - viking_db
    command: python -m aiohttp.web -H 0.0.0.0 -P 8000 main:init
    restart: unless-stopped

networks:
  viking-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${NETWORK_ADDRESS}
